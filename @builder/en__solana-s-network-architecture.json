{
  "@liveSyncEnabled": true,
  "folders": [],
  "data": {
    "image": "",
    "inputs": [],
    "author": {
      "@type": "@builder.io/core:Reference",
      "model": "author",
      "id": "0fe0adbf9f1fc7f11a669e9e6b05ec533c948f70f16dc2807a1cc41f30073153"
    },
    "title": "Solana’s Network Architecture",
    "twitterMeta": {
      "twitterTitle": "Solana’s Network Architecture",
      "twitterDescription": "\nA brief run-down of Solana’s high-performance permissionless network design\n",
      "twitterImage": null
    },
    "tags": [
      {
        "tag": {
          "@type": "@builder.io/core:Reference",
          "model": "entity-blog-tags",
          "id": "983ae1dad0ba4ca4ac6dd4ac310edee1_b19c9e9e2a4346799b33bdf5fd6b6e70"
        }
      },
      {
        "tag": {
          "@type": "@builder.io/core:Reference",
          "model": "entity-blog-tags",
          "id": "983ae1dad0ba4ca4ac6dd4ac310edee1_aaa460403dce4b9cb41a38be77a4aff3"
        }
      },
      {
        "tag": {
          "@type": "@builder.io/core:Reference",
          "model": "entity-blog-tags",
          "id": "983ae1dad0ba4ca4ac6dd4ac310edee1_cc2a090883fa483f851b95d82088edec"
        }
      },
      {
        "tag": {
          "@type": "@builder.io/core:Reference",
          "model": "entity-blog-tags",
          "id": "983ae1dad0ba4ca4ac6dd4ac310edee1_f7eb7b2117214a3d93bfe643270da5f2"
        }
      }
    ],
    "datePublished": 1528700400000,
    "intro": "\nA brief run-down of Solana’s high-performance permissionless network design\n",
    "publishedDate": "Mon Jun 11 2018 00:00:00 GMT-0700 (Pacific Daylight Time)",
    "seo": {
      "internalName": "Solana’s Network Architecture",
      "noFollow": false,
      "seoDescription": "\nA brief run-down of Solana’s high-performance permissionless network design\n",
      "seoTitle": "Solana’s Network Architecture",
      "noIndex": false
    },
    "openGraph": {
      "ogTitle": "Solana’s Network Architecture",
      "ogUrl": "https://www.solana.com/blog/solana-s-network-architecture",
      "ogDescription": "\nA brief run-down of Solana’s high-performance permissionless network design\n",
      "ogImage": null,
      "ogType": [
        "article"
      ]
    },
    "slug": "solana-s-network-architecture",
    "blocks": [
      {
        "@type": "@builder.io/sdk:Element",
        "@version": 2,
        "id": "builder-9c3f3352e727478dbe601a5dae3b7488",
        "component": {
          "name": "Section Molecule",
          "options": {
            "noPadding": "none"
          }
        },
        "children": [
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-a7e762aaefc144219ac034e2c5b0b88d",
            "component": {
              "name": "Text",
              "options": {
                "text": "<h3><strong>A brief run-down of&nbsp;</strong><a href=\"https://solana.com/?utm_source=medium&amp;utm_campaign=network_architecture\" rel=\"noopener noreferrer\" target=\"_blank\"><strong>Solana</strong></a><strong>’s high-performance permissionless network&nbsp;design</strong></h3>"
              }
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "marginTop": "20px",
                "lineHeight": "normal",
                "height": "auto"
              }
            }
          },
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-27331a6696304207abd40a218811c671",
            "component": {
              "name": "Image",
              "options": {
                "image": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=680",
                "backgroundSize": "cover",
                "backgroundPosition": "center",
                "lazy": false,
                "fitContent": true,
                "aspectRatio": 0.36,
                "lockAspectRatio": false,
                "sizes": "(max-width: 638px) 85vw, (max-width: 998px) 69vw, 49vw",
                "height": 720,
                "width": 2000,
                "srcset": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=100 100w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=200 200w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=400 400w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=800 800w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=1200 1200w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=1600 1600w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=2000 2000w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=680 680w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Fe6191c93976043bc896df10cb993567c?width=542 542w"
              }
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "marginTop": "20px",
                "width": "100%",
                "minHeight": "400px",
                "minWidth": "20px",
                "overflow": "hidden"
              }
            }
          },
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-90e104b9e5c440aeb932fab8afc6f6a8",
            "component": {
              "name": "Text",
              "options": {
                "text": "<p>A high-performance permissionless network — is that even possible?</p><p>In a permissionless network anyone on the Internet can download the software, join the network and participate in any of its functions. For us that means that any node can be a leader or validator.</p><p>Here are some of the challenges:</p><ul><li>We are on the open Internet and a node can be DDOSed. This topic deserves its own article and will be covered in the future.</li><li>Signature verification is our only method for authenticating messages. We cannot trust IP addresses.</li><li>Only when a dishonest node signs an invalid message can we punish them by presenting that message to the rest of the network.</li><li>Only when 2/3rds of the network recognize that the signed message was dishonest will punishment take effect.</li><li>We can only punish nodes by removing their tokens — and only those that belong to the public key identity of the signature.</li><li>Individual observations about the network from external nodes cannot be trusted. We can only aggregate them and hope that the supermajority of the network is honest.</li></ul><h3><strong>Message Flow in&nbsp;Solana</strong></h3>"
              }
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "marginTop": "20px",
                "lineHeight": "normal",
                "height": "auto"
              }
            }
          },
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-2713ac3e7feb4a869a2f5b069f469976",
            "component": {
              "name": "Image",
              "options": {
                "image": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=680",
                "backgroundSize": "cover",
                "backgroundPosition": "center",
                "lazy": false,
                "fitContent": true,
                "aspectRatio": 0.75,
                "lockAspectRatio": false,
                "sizes": "(max-width: 638px) 85vw, (max-width: 998px) 69vw, 49vw",
                "height": 600,
                "width": 800,
                "srcset": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=100 100w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=200 200w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=400 400w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=800 800w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=1200 1200w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=1600 1600w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=2000 2000w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=680 680w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F13aa24b219614ee4801a460ef33ee458?width=542 542w"
              }
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "marginTop": "20px",
                "width": "100%",
                "minHeight": "400px",
                "minWidth": "20px",
                "overflow": "hidden"
              }
            }
          },
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-fb19b2ee00734458bbbaffd81f9d18ca",
            "component": {
              "name": "Text",
              "options": {
                "text": "<p>Figure 1. Message flow through the&nbsp;network.</p><p>As shown in Figure 1, client messages arrive to the current leader, the leader inserts them into a&nbsp;<a href=\"https://medium.com/@anatolyyakovenko/proof-of-history-a-decentralized-clock-for-blockchain-9d245bd5abb3?ref=solana.ghost.io\" rel=\"noopener noreferrer\" target=\"_blank\">Proof of History</a>&nbsp;(PoH) stream and broadcasts it out to the rest of the network, which act like validators. The challenge in this design is that the leader can ingest 1 gigabit worth of data and need to somehow produce 1 gigabit worth of output to multiple machines at the same time. It can’t broadcast the full set of data to all the machines because that would add up to more than 1 gigabit. Our approach is to split the bandwidth between downstream validators and have them re-assemble the stream back together.</p>"
              }
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "marginTop": "20px",
                "lineHeight": "normal",
                "height": "auto"
              }
            }
          },
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-0ead4204264d4e5cae996cce8de872a2",
            "component": {
              "name": "Image",
              "options": {
                "image": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=680",
                "backgroundSize": "cover",
                "backgroundPosition": "center",
                "lazy": false,
                "fitContent": true,
                "aspectRatio": 0.75,
                "lockAspectRatio": false,
                "height": 600,
                "width": 800,
                "srcset": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=100 100w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=200 200w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=400 400w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=800 800w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=1200 1200w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=1600 1600w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=2000 2000w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=680 680w, https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F3a0c12005c4946be87e6a770f39dd983?width=542 542w",
                "sizes": "(max-width: 638px) 85vw, (max-width: 998px) 69vw, 49vw"
              }
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "marginTop": "20px",
                "width": "100%",
                "minHeight": "400px",
                "minWidth": "20px",
                "overflow": "hidden"
              }
            }
          },
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-4fd9feac75564caeab46b8576962575b",
            "component": {
              "name": "Text",
              "options": {
                "text": "<p>Figure 2. Avalanche packet&nbsp;flow.</p><p>Figure 2. shows how the leader splits the bandwidth between downstream nodes. The leader sends a packet up to 64kb in a round robin fashion to each validator in the first layer. That validator immediately broadcasts it to everyone else in the first layer of the network. This should pipeline the transmission of the second packet from the leader to validator 2 with the broadcast of the first block from validator 1 to the rest of the network.</p><p>Two kinds of packets are transmitted by the leader.</p><ul><li>Data packets, which is some PoH data to represent that real-time is passing with some transactions that are hashed into that PoH data.</li><li>RS packets, which are Reed-Solomon codes that can be used to reconstruct the dataset if any of the packets are dropped.</li></ul><p>RS Code packets take up some of the available bandwidth, so they reduce our throughput, but they allow each validator to repair the transmitted data structure if a few random packets are dropped.</p><p>The set of first layer validators should be the supermajority of nodes weighted by their stake size plus the number of nodes expected to fail at any given time. The number of extra RS Code packets and extra nodes in the first layer will give the network some room for dropped packets and hardware failures.</p><h2><strong>Check it out on&nbsp;Github</strong></h2><p>Here is the leaders&nbsp;<a href=\"https://github.com/solana-labs/solana/blob/v0.6.0/src/crdt.rs?ref=solana.ghost.io#L228\" rel=\"noopener noreferrer\" target=\"_blank\">broadcast loop</a>, the validators&nbsp;<a href=\"https://github.com/solana-labs/solana/blob/v0.6.0/src/crdt.rs?ref=solana.ghost.io#L310\" rel=\"noopener noreferrer\" target=\"_blank\">retransmission loop</a>, and the validators&nbsp;<a href=\"https://github.com/solana-labs/solana/blob/v0.6.0/src/streamer.rs?ref=solana.ghost.io#L200\" rel=\"noopener noreferrer\" target=\"_blank\">window loop.</a></p><p>Just like a TCP window, each validator may see packets arrive out of order and needs to reconstruct a window. If a validator is missing a packet in the window and is unable to repair it with Reed-Solomon codes, it can also&nbsp;<a href=\"https://github.com/solana-labs/solana/blob/v0.6.0/src/streamer.rs?ref=solana.ghost.io#L170\" rel=\"noopener noreferrer\" target=\"_blank\">asks the network randomly for any missing packets</a>.</p><p>The window repair responses are sent to a different port than the general broadcast, so they can&nbsp;<a href=\"https://github.com/solana-labs/solana/blob/master/src/tvu.rs?ref=solana.ghost.io#L100\" rel=\"noopener noreferrer\" target=\"_blank\">skip all the packets in the kernel’s queue for the broadcast UDP socket.</a></p><h3><strong>CRDTs</strong></h3><p>Most of the above functions are implemented inside the crdt module. CRDT are&nbsp;<a href=\"https://en.wikipedia.org/wiki/Conflict-free_replicated_data_type?ref=solana.ghost.io\" rel=\"noopener noreferrer\" target=\"_blank\">Conflict-free Replicated Data Types</a>. When we speak of the network this is really what we mean. It’s a table of versioned structs called ReplicatedData. These structures are randomly propagated through the network, and the latest version is always picked.</p><p>The ReplicatedData structure contains information about the node, such as various port addresses, public key identity, current hash of the blockchain state. Each node in the network randomly asks nodes if they have any updates and applies these updates to their table. Eventually all these messages must be signed by their identities.</p><p>Randomly querying the network for updates is our very bare bones gossip network. It allows the nodes to route around hardware failures of any single node, as long as there is a path somewhere in the network to connect them. The leader needs to transmit enough RS Code packets to cover the churn in this table. There are&nbsp;<a href=\"https://github.com/solana-labs/solana/blob/v0.6.0/tests/data_replicator.rs?ref=solana.ghost.io#L74\" rel=\"noopener noreferrer\" target=\"_blank\">tests for various topologies</a>.</p><p>We can optimize how fast we converge, but it needs to be done with care, since any “rumors” about other nodes in the network&nbsp;<a href=\"https://github.com/solana-labs/solana/issues/302?ref=solana.ghost.io\" rel=\"noopener noreferrer\" target=\"_blank\">could be faked</a>.</p><p>— —</p><p>Want to learn more about&nbsp;<a href=\"https://solana.com/?utm_source=medium&amp;utm_campaign=network_architecture\" rel=\"noopener noreferrer\" target=\"_blank\">Solana</a>?</p><p>Check us out on&nbsp;<a href=\"https://github.com/solana-labs?ref=solana.ghost.io\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a>&nbsp;and find ways to connect on our&nbsp;<a href=\"https://solana.com/community/?utm_source=medium&amp;utm_campaign=network_architecture\" rel=\"noopener noreferrer\" target=\"_blank\">community</a>&nbsp;page.</p>"
              }
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "marginTop": "20px",
                "lineHeight": "normal",
                "height": "auto"
              }
            }
          }
        ],
        "responsiveStyles": {
          "large": {
            "display": "flex",
            "flexDirection": "column",
            "position": "relative",
            "flexShrink": "0",
            "boxSizing": "border-box"
          }
        }
      }
    ],
    "state": {
      "deviceSize": "large",
      "location": {
        "path": "",
        "query": {}
      }
    }
  },
  "modelId": "983ae1dad0ba4ca4ac6dd4ac310edee1_cae3647488a54a1f8ffd55aa9b31c4b5",
  "screenshot": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F68e8c5427b32481dbdf9be5fa7e25c59",
  "lastUpdated": 1694189911527,
  "variations": {},
  "id": "983ae1dad0ba4ca4ac6dd4ac310edee1_a31689b7b40b409ca96194b84f0815a4",
  "lastUpdatedBy": "6GvakQAYwcPfcEbpsKxTUjHecF22",
  "query": [],
  "published": "published",
  "firstPublished": 1687425921212,
  "@originId": "a31689b7b40b409ca96194b84f0815a4",
  "testRatio": 1,
  "createdDate": 1687362750108,
  "createdBy": "AmQlet2K3ihDy7VCo3GG4DPZBHl2",
  "meta": {
    "lastPreviewUrl": "https://solana.com/api/preview?secret=micky-mouse&builder.space=ce0c7323a97a4d91bd0baa7490ec9139&builder.cachebust=true&builder.preview=post&builder.noCache=true&__builder_editing__=true&builder.overrides.post=a31689b7b40b409ca96194b84f0815a4&builder.overrides.a31689b7b40b409ca96194b84f0815a4=a31689b7b40b409ca96194b84f0815a4&builder.options.includeRefs=true&builder.options.locale=Default",
    "kind": "component",
    "componentsUsed": {
      "Section Molecule": 1
    },
    "hasLinks": false
  },
  "name": "Solana’s Network Architecture",
  "@originModelId": "cae3647488a54a1f8ffd55aa9b31c4b5",
  "@originOrgId": "ce0c7323a97a4d91bd0baa7490ec9139",
  "rev": "l9w1e2t4y1"
}