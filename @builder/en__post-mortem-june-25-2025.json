{
  "createdBy": "rfkJKsR9FxTVJ7ts7qFHGvOaibA3",
  "createdDate": 1750799642126,
  "data": {
    "author": {
      "@type": "@builder.io/core:Reference",
      "id": "983ae1dad0ba4ca4ac6dd4ac310edee1_f2138d44442d4e47885fe25f4514707e",
      "model": "author"
    },
    "datePublished": 1750860000000,
    "image": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F38950347b28743dfad81ae9fd90ded85",
    "intro": "",
    "seo": {
      "metaType": "article",
      "metaUrl": "",
      "seoImage": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2F38950347b28743dfad81ae9fd90ded85",
      "seoTitle": "Post Mortem: ZK ElGamal Proof Program Bug, June 2025"
    },
    "slug": "post-mortem-june-25-2025",
    "title": {
      "@type": "@builder.io/core:LocalizedValue",
      "Default": "Post Mortem: ZK ElGamal Proof Program Bug, June 2025"
    },
    "blocks": [
      {
        "@type": "@builder.io/sdk:Element",
        "@version": 2,
        "id": "builder-cc8754a8eb184622ab3692326b025716",
        "meta": {
          "previousId": "builder-dbdf84cce9ac43d09b9f3e7ce17089d2"
        },
        "component": {
          "name": "Section Molecule",
          "options": {
            "noPadding": "none"
          },
          "isRSC": null
        },
        "children": [
          {
            "@type": "@builder.io/sdk:Element",
            "@version": 2,
            "id": "builder-6f7952f103834fffa6e9ece81ce9c4c8",
            "meta": {
              "previousId": "builder-960cd939572a4c8292c1f11eec6fedfe"
            },
            "component": {
              "name": "Text",
              "options": {
                "text": "<h5>Timeline</h5><p>On 2025-06-10, a potential vulnerability was reported to the Anza<a href=\"https://github.com/anza-xyz/agave/security/policy\" rel=\"noopener noreferrer\" target=\"_blank\"> Github Security Advisory</a> by <a href=\"https://x.com/suneal_eth\" rel=\"noopener noreferrer\" target=\"_blank\">suneal_eth</a> (a security researcher from <a href=\"https://x.com/zksecurityXYZ\" rel=\"noopener noreferrer\" target=\"_blank\">zksecurityXYZ</a>). The report contained a proof of concept for the vulnerability. There is no known exploit of the vulnerability. Engineers from Anza, Firedancer, and Jito began evaluating the report and confirmed that it allowed for the construction of arbitrary proofs that the ZK ElGamal Proof program would accept as valid.</p><p><br></p><p>Engineers created a patch to address the reported issue, however, given that this is the <a href=\"https://solana.com/news/post-mortem-may-2-2025\" rel=\"noopener noreferrer\" target=\"_blank\">second ZK ElGamal issue reported</a>, and out of an abundance of caution, engineers chose to publish a change to the upgradable Token-2022 program to disable confidential transfers until more auditing could be done. The updated Token-2022 program was deployed via a multisig on 2025-06-11 and mitigated the reported potential vulnerability. On 2025-06-13, an <a href=\"https://discord.com/channels/428295358100013066/669406841830244375/1383207984259137608\" rel=\"noopener noreferrer\" target=\"_blank\">urgent upgrade request</a> was sent to the mb-announcements channel of the solana-tech discord, requesting that operators adopt Agave v2.2.16, Jito-Solana v2.2.16 or Firedancer v0.505.20216. The requested software upgrades contained a feature activation to disable the ZK ElGamal proof program. On 2025-06-19, at approximately 06:00 UTC at the start of mainnet-beta epoch 805, the ZK ElGamal proof program was disabled via feature activation.</p><h5>Preliminaries</h5><p>A Token-2022 confidential transfer is executed via two programs: the Token-2022 program and the ZK ElGamal Proof program. The Token-2022 program is a popular on-chain program that handles the main application logic for token mints, and accounts. The ZK ElGamal Proof program is a native program that verifies the correctness of complex zero-knowledge proofs certifying the validity of encrypted balances in accounts and transactions.</p><p>Typically, a zero-knowledge proof system is implemented by converting a two-party interactive zero-knowledge proof protocol into a non-interactive proof system using the \"Fiat-Shamir Transformation\". The Fiat-Shamir Transformation specifies how a prover can generate public randomness using a cryptographic hash function. When verifying proofs generated via the Fiat-Shamir Transformation, the verification logic must hash all algebraic components comprising the proof.</p><h5>The bug</h5><p>In the on-chain ZK ElGamal Proof program, a component was not included in a hash used to generate a transcript for the Fiat-Shamir Transformation. A sophisticated attacker could use this unhashed component to develop a forged proof of an unauthorized action that passes verification. This vulnerability only affects Token-2022 confidential tokens and allows an attacker to perform unauthorized actions such as minting unlimited tokens or draining a victimâ€™s confidential balance.</p><h5>The fix</h5><p>The ZK ElGamal program is a new program on Solana Mainnet Beta. After an exploration, it was found that only the Confidential Transfer features of the Token-2022 program use the ElGamal functionality affected by the bug. The Token-2022 program is currently an upgradable program. As a short term mitigation, the Token-2022 program was updated to disable confidential transfers on 2025-06-11. To mitigate any future attacks on the ZK ElGamal program, and out of an abundance of caution, a feature activation was activated at the start of Mainnet-Beta epoch 805 that has disabled the ZK ElGamal program while further audits can be performed. The ZK ElGamal program will be re-enabled after audits are completed and any issues reported have been mitigated. The process of auditing the program, implementing any necessary changes, and then deploying the updated software will take at least a few months.&nbsp;Please monitor the mb-announcements and mb-feature-gates channels of the Ssolana tech discord for further updates.</p><h5>Impact</h5><p>Token-2022 features that require the ZK ElGamal program are used by innovative products that are still in testing. While a number of major stablecoins like PYUSD, AUSD, and USDG have Confidential Transfers initialized, none of them have activated this feature for their end users. Actual usage of Confidential Transfers is still extremely low. No real volumes or dollar value is currently moved through Confidential Transfers. The impact, therefore, is minimal. There are no known exploits of the potential vulnerability.</p><h5>Tl;dr</h5><p>A potential vulnerability was responsibly reported. The vulnerability could allow an attacker to forge an invalid proof and have it accepted by the ZK ElGamal Proof program.&nbsp;</p>"
              },
              "isRSC": null
            },
            "responsiveStyles": {
              "large": {
                "display": "flex",
                "flexDirection": "column",
                "position": "relative",
                "flexShrink": "0",
                "boxSizing": "border-box",
                "lineHeight": "normal",
                "height": "auto"
              }
            }
          }
        ],
        "responsiveStyles": {
          "large": {
            "display": "flex",
            "flexDirection": "column",
            "position": "relative",
            "flexShrink": "0",
            "boxSizing": "border-box"
          }
        }
      }
    ],
    "state": {
      "deviceSize": "large",
      "location": {
        "path": "",
        "query": {}
      }
    }
  },
  "folders": [],
  "id": "983ae1dad0ba4ca4ac6dd4ac310edee1_854339342ba64deda6efaed2e7bf36a9",
  "lastUpdated": 1750891326867,
  "lastUpdatedBy": "rfkJKsR9FxTVJ7ts7qFHGvOaibA3",
  "meta": {
    "breakpoints": {
      "medium": 991,
      "small": 640,
      "xsmall": 320
    },
    "componentsUsed": {
      "Section Molecule": 1
    },
    "hasLinks": false,
    "kind": "component",
    "lastPreviewUrl": "https://staging.solana.com/news/post-mortem-june-25-2025?builder.space=983ae1dad0ba4ca4ac6dd4ac310edee1&builder.user.permissions=read%2Ccreate%2Cpublish%2CeditLayouts%2CeditLayers%2CeditContentPriority%2CeditFolders&builder.user.role.name=Editor&builder.user.role.id=editor&builder.cachebust=true&builder.preview=post&builder.noCache=true&builder.allowTextEdit=true&__builder_editing__=true&builder.overrides.post=983ae1dad0ba4ca4ac6dd4ac310edee1_854339342ba64deda6efaed2e7bf36a9&builder.overrides.983ae1dad0ba4ca4ac6dd4ac310edee1_854339342ba64deda6efaed2e7bf36a9=983ae1dad0ba4ca4ac6dd4ac310edee1_854339342ba64deda6efaed2e7bf36a9&builder.options.includeRefs=true&builder.options.enrich=true&builder.options.locale=Default",
    "originalContentId": "983ae1dad0ba4ca4ac6dd4ac310edee1_12b2eb838ab54b6399493fdd85e61a1d",
    "winningTest": null
  },
  "modelId": "983ae1dad0ba4ca4ac6dd4ac310edee1_cae3647488a54a1f8ffd55aa9b31c4b5",
  "name": "Post Mortem: ZK ElGamal Proof Program Bug 2",
  "previewUrl": "https://staging.solana.com/news/post-mortem-june-25-2025",
  "published": "published",
  "query": [],
  "screenshot": "https://cdn.builder.io/api/v1/image/assets%2Fce0c7323a97a4d91bd0baa7490ec9139%2Ff49285bcbfbb4f8ba1eb6b38e87fce3e",
  "testRatio": 1,
  "variations": {},
  "@originId": "854339342ba64deda6efaed2e7bf36a9",
  "@originOrgId": "ce0c7323a97a4d91bd0baa7490ec9139",
  "@originModelId": "cae3647488a54a1f8ffd55aa9b31c4b5",
  "@liveSyncEnabled": true,
  "rev": "l9w1e2t4y1"
}